C语言一个地址占6字节， 数据库一行记录大概1KB 

B+树 1170*1170*16 h=3， 根节点常驻内存

B+树：
    非叶子节点不存数据，只存储索引，可以放更多的索引
    叶子结点包含所有索引字段
    叶子结点用指针相连接，提高区间访问性能（20 < a < 50 区间查找）

数据库innondb引擎存储形式为 .frm（表结构）和.ibd文件
myisam引擎存储形式：.frm + .MYI（索引index） + .MYD（数据data）文件

arraylist基于动态数组，连续内存存储，适合下标访问。
    扩容机制：创建新数组，为原数组的1.5倍，copy原数组进来，使用尾插法可以提升性能，甚至超过lindedlist，因为linkedlist需要创建大量的node对象
linkedlist不适合用fori去进行遍历，会一次次查找i的索引元素，遍历影响性能。也不要用indexOf，使用iterator

concurrenthashmap：
    1.7版本
    基于segment对象分段去实现，每个segment相当于一个hashmap，内部扩容 

CopyOnWriteArrayList：
    内部通过数组实现，添加元素时，会复制一个新数组，长度+1，写操作在新数组，读操作在原数组
    写会加锁，防止并发写出现问题
    写完后会把原数组指向新数组
    允许写时读取，提升性能，适合读多写少，占内存，实时性不高

Mysql的ACID靠什么保证？
    A 原子性  靠undo log 回滚
    C 一致性  由其他3个特性+代码保证
    I 隔离性  MVCC多版本并发控制
    D 持久性  内存+redo log 
查询需要事务吗 ？
    如果只有一条查询，不需要
    如果有多条查询，使用readOnly = true ， 因为RR和RC隔离级别下，查询可能会有问题

